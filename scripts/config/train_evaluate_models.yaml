# Experiment Configuration
experiment:
  name: bmipred_experiment
  output_dir: data/results
  n_repeats: 10
  random_state: 2000

# Data Configuration
data:
  target_col: target
  columns_to_drop: ['PatientDurableKey', 'CreateInstant', 'RateOfBMIChange_month', 'RateOfBMIChange']
  test_size: 0.2
  
  # Table paths
  tables:
    cohort_on_olanzapine_first: data/processed/cohort_on_olanzapine_first.parquet
    cohort_on_olanzapine_last: data/processed/cohort_on_olanzapine_last.parquet

# Model Configuration
models:
  LogisticRegression:
    class: "sklearn.linear_model.LogisticRegression"
    params:
      max_iter: 1000
      random_state: 1993
    param_grid:
      C: [0.01, 0.1, 1]
      penalty: ['l2', 'elasticnet']
      l1_ratio: [0.1, 0.5, 0.9]
      solver: ['saga']
      max_iter: [5000]

  RandomForest:
    class: "sklearn.ensemble.RandomForestClassifier"
    params:
      random_state: 1993
    param_grid:
      n_estimators: [100, 200]
      max_depth: [5, 10, 20]
      max_features: ['sqrt', 0.2]
      min_samples_split: [2, 10, 30]

  DecisionTree:
    class: "sklearn.tree.DecisionTreeClassifier"
    params:
      random_state: 1993
    param_grid:
      max_depth: [5, 10, 20]
      min_samples_split: [5, 10, 30]
      max_features: ['sqrt', 0.2]

  GradientBoosting:
    class: "sklearn.ensemble.GradientBoostingClassifier"
    params:
      random_state: 1993
    param_grid:
      n_estimators: [100, 200]
      learning_rate: [0.01, 0.05, 0.1]
      max_depth: [3, 5, 7]
      max_features: ['sqrt', 0.2]

  XGBoost:
    class: "xgboost.XGBClassifier"
    params:
      objective: 'binary:logistic'
      use_label_encoder: False
      eval_metric: 'logloss'
      random_state: 1993
    param_grid:
      n_estimators: [100, 200]
      learning_rate: [0.01, 0.05, 0.1]
      max_depth: [3, 5, 7]
      subsample: [0.7, 1.0]
      colsample_bytree: [0.2, 0.5, 1.0]
      reg_alpha: [0, 0.5, 1]
      reg_lambda: [1, 3]

# Training Configuration
training:
  cv_folds: 5
  scoring: 'roc_auc'
  n_jobs: -1

# Visualization Configuration
visualization:
  max_display_features: 15
  plot_params:
    figure.figsize: [7, 7]
    font.size: 10
    axes.titlesize: 12
    axes.labelsize: 10
    savefig.dpi: 500
  
  age_groups: ["18-29", "30-49", "50-69", "70+"]
  age_bins: [0, 30, 50, 70, 120]

# Metrics to keep in final reports
metrics:
  keep_metrics:
    "Test ROC AUC": "AUROC"
    "Test F1 Score (positive)": "F1 (positive)"
    "Test F1 Score (weighted)": "F1 (weighted)"
    "Test F1 Score (macro)": "F1 (macro)"
    "Test Accuracy": "Accuracy"
    "Test Sensitivity (Recall)": "Sensitivity"
    "Test Specificity": "Specificity"
    "Test PPV (Precision)": "PPV"
    "Test NPV": "NPV"
    "Test Matthews Correlation Coefficient": "MCC"